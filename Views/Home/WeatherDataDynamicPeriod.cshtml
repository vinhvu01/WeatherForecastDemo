@model WeatherData
@{
    Layout = "_Layout";
    ViewBag.Title = "Daily Forecast";
}

@try
{
    @if (Model is null)
    {
        <h1>I am sorry, I can't find your city :(</h1>

        <br />
        <a asp-action="" class="btn btn-sm btn-primary">Search Other City</a>
        return;
    }

    <div style="text-align: center;">
        <h2>@Model.Period.ToUpperInvariant() in @Model.Address</h2>
    </div>

    <h2>Daily</h2>
    @if (Model.Period != "last24hours" && Model.Period != "next24hours")
    {
        Html.RenderPartial("_DaysTable", Model.Days);
    }
    else
    {
        Html.RenderPartial("_HoursTable", Model.Days[0].Hours);
    }
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
    <a asp-action="" class="btn btn-sm btn-primary">Search Other City</a>
    <br />
}
catch
{

    <h1>I am sorry, I can't find your city :(</h1>

    <br />
    <a asp-action="" class="btn btn-sm btn-primary">Search Other City</a>

}
<script>
	window.onload = function () {

		var chart = new CanvasJS.Chart("chartContainer", {
			theme: "light2",
			title: {
				text: "Comparison types of Wind by datetime"
			},
			toolTip: {
				shared: true
			},
            data: [{
                type: "area",
                name: "WindSpeed",
                markerSize: 0,
                xValueType: "dateTime",
                dataPoints: @Html.Raw(ViewBag.WindSpeed)
            },
            {
                type: "area",
                name: "Windgust",
                markerSize: 0,
                xValueType: "dateTime",
                dataPoints: @Html.Raw(ViewBag.Windgust)
            },
            {
                type: "splineArea",
                color: "#F4A12B",
                lineColor: "black",
                markerColor: "black",
                name: "WindDir",
                xValueType: "dateTime",
                dataPoints: @Html.Raw(ViewBag.WindDir)
            }
            ]
		});
		chart.render();

	}
</script>